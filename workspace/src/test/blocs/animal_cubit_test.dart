
import 'package:flutter_test/flutter_test.dart';
import 'package:bloc_test/bloc_test.dart';
import 'package:mocktail/mocktail.dart';
import 'package:animal_app/blocs/animal_cubit.dart';
import 'package:animal_app/blocs/animal_state.dart';
import 'package:animal_app/models/animal_model.dart';

class MockAnimalCubit extends MockCubit<AnimalState> implements AnimalCubit {}

void main() {
	group('AnimalCubit', () {
		late AnimalCubit animalCubit;

		setUp(() {
			animalCubit = AnimalCubit();
		});

		tearDown(() {
			animalCubit.close();
		});

		test('initial state is AnimalState with Cat and clock icon', () {
			expect(animalCubit.state.animal.name, 'Cat');
			expect(animalCubit.state.animal.icon, Icons.access_time);
		});

		blocTest<AnimalCubit, AnimalState>(
			'emits [AnimalState] with Dog and person icon when toggleAnimal is called',
			build: () => animalCubit,
			act: (cubit) => cubit.toggleAnimal(),
			expect: () => [
				AnimalState(animal: Animal(name: 'Dog', icon: Icons.person))
			],
		);

		blocTest<AnimalCubit, AnimalState>(
			'toggles back to Cat and clock icon when toggleAnimal is called twice',
			build: () => animalCubit,
			act: (cubit) {
				cubit.toggleAnimal();
				cubit.toggleAnimal();
			},
			expect: () => [
				AnimalState(animal: Animal(name: 'Dog', icon: Icons.person)),
				AnimalState(animal: Animal(name: 'Cat', icon: Icons.access_time)),
			],
		);
	});
}
